DistMod <- glm(switch ~ dist100, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistMod)
# Fit the model
DistMod <- glm(switch ~ dist100, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistMod)
wells %>%
# Group by switch (0 or 1)
group_by(switch) %>%
# Calculate mean and standard deviation for each group
summarize(mean = mean(dist100),
sd = sd(dist100))
# Fit the model
DistMod <- glm(switch ~ dist100, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistMod)
wells %>%
# Set distance to be explanatory and switch to be response
ggplot(aes(x = dist100, y = switch)) +
# Jitter points by height but not width. Also make points slightly transparent
geom_jitter(height = 0.05, width = 0, alpha = 0.2) +
# Add fitted model. We specify the type of model with the method.args argument
geom_smooth(method = "glm", method.args = list(family = "binomial"))
wells %>%
# Set distance to be explanatory and switch to be response
ggplot(aes(x = dist100, y = switch)) +
# Jitter points by height but not width. Also make points slightly transparent
geom_jitter(height = 0.05, width = 0, alpha = 0.2) +
# Add fitted model. We specify the type of model with the method.args argument
geom_smooth(method = "glm", method.args = list(family = "binomial"))
wells %>%
# Set distance to be explanatory and switch to be response
ggplot(aes(x = dist100, y = switch)) +
# Jitter points by height but not width. Also make points slightly transparent
geom_jitter(height = 0.05, width = 0, alpha = 0.2) +
# Add fitted model. We specify the type of model with the method.args argument
geom_smooth(method = "glm", method.args = list(family = "binomial"))
## Install the packages below BEFORE you run this chunk. ##
# our old friend tidyverse
library(tidyverse)
# For plotting multiple logistic regressions
library(ggiraphExtra)
# allows cross-validation cv.glm()
library(boot)
# Read in the data
wells <- read_csv("wells.csv")
# Check the structure
glimpse(wells)
wells %>%
# Set aesthetics. Adjust fill color by whether the household switched or not.
# The function factor() makes sure R recognizes switch as a categorical
# variable for plotting.
ggplot(aes(x = dist100, fill = factor(switch))) +
# Make interleaved histogram
geom_histogram(position = "dodge")
## Install the packages below BEFORE you run this chunk. ##
# our old friend tidyverse
library(tidyverse)
# For plotting multiple logistic regressions
library(ggiraphExtra)
# allows cross-validation cv.glm()
library(boot)
## Install the packages below BEFORE you run this chunk. ##
# our old friend tidyverse
library(tidyverse)
# For plotting multiple logistic regressions
library(ggiraphExtra)
# allows cross-validation cv.glm()
library(boot)
# Read in the data
wells <- read_csv("wells.csv")
# Check the structure
glimpse(wells)
wells %>%
# Set aesthetics. Adjust fill color by whether the household switched or not.
# The function factor() makes sure R recognizes switch as a categorical
# variable for plotting.
ggplot(aes(x = dist100, fill = factor(switch))) +
# Make interleaved histogram
geom_histogram(position = "dodge")
wells %>%
# Group by switch (0 or 1)
group_by(switch) %>%
# Calculate mean and standard deviation for each group
summarize(mean = mean(dist100),
sd = sd(dist100))
# Fit the model
DistMod <- glm(switch ~ dist100, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistMod)
# Fit the model
DistMod <- glm(switch ~ dist100, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistMod)
wells %>%
# Set distance to be explanatory and switch to be response
ggplot(aes(x = dist100, y = switch)) +
# Jitter points by height but not width. Also make points slightly transparent
geom_jitter(height = 0.05, width = 0, alpha = 0.2) +
# Add fitted model. We specify the type of model with the method.args argument
geom_smooth(method = "glm", method.args = list(family = "binomial"))
wells %>%
# Set distance to be explanatory and switch to be response
ggplot(aes(x = dist100, y = switch)) +
# Jitter points by height but not width. Also make points slightly transparent
geom_jitter(height = 0.05, width = 0, alpha = 0.2) +
# Add fitted model. We specify the type of model with the method.args argument
geom_smooth(method = "glm", method.args = list(family = "binomial"))
wells %>%
# Set aesthetics and color by switch (0 or 1)
ggplot(aes(x = arsenic, fill = factor(switch))) +
# Make interleaved histogram
geom_histogram(position = "dodge")
View(wells)
# Fit the model
DistArsenicMod <- glm(switch ~ dist100+arsenic, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistArsenicMod)
# Fit the model
DistArsenicMod <- glm(switch ~ dist100*arsenic, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistArsenicMod)
# Fit the model
DistArsenicMod <- glm(switch ~ dist100+arsenic, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistArsenicMod)
# Fit the model
DistArsenicMod <- glm(switch ~ dist100*arsenic, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistArsenicMod)
# Fit the model
DistArsenicMod <- glm(switch ~ dist100*arsenic, family = binomial(link = "logit"), data=wells)
# Look at the model summary
summary(DistArsenicMod)
wells %>%
ggplot(aes(y=arsenic,x=dist100)) +geom_point()
wells %>%
ggplot(aes(y=arsenic,x=dist100,col=switch)) +geom_point()
wells %>% #pipe in data
ggplot(aes(y=arsenic,x=dist100,col=switch)) + #set explanatory &response vars
geom_point() + ggtitle(main="Covariance of Arsenic Levels and
Distance to Nearest Safe Well")#add scatter plot
wells %>% #pipe in data
ggplot(aes(y=arsenic,x=dist100,col=switch)) + #set explanatory &response vars
geom_point() + ggtitle("Covariance of Arsenic Levels and
Distance to Nearest Safe Well")#add scatter plot
wells %>% #pipe in data
ggplot(aes(y=arsenic,x=dist100,col=switch)) + #set explanatory &response vars
geom_point() + #scatter plot
ggtitle("Covariance of Arsenic Levels and Distance to Nearest Safe Well") +
wells %>% #pipe in data
ggplot(aes(y=arsenic,x=dist100,col=switch)) + #set explanatory &response vars
geom_point() + #scatter plot
ggtitle("Covariance of Arsenic Levels and Distance to Nearest Safe Well")
wells %>% #pipe in data
ggplot(aes(y=arsenic,x=dist100,col=switch)) + #set explanatory &response vars
geom_point() + #scatter plot
ggtitle("Covariance of Arsenic Levels and Distance to Nearest Safe Well")
ggPredict(DistArsenicMod, se = TRUE)
wells %>% #pipe in data
ggplot(aes(y=arsenic,x=dist100,col=switch)) + #set explanatory & response vars
geom_point() + #scatter plot
#add a title
ggtitle("Covariance of Arsenic Levels and Distance to Nearest Safe Well")
cv_DistMod <- cv.glm(wells, DistMod, K = 3)
cv_DistMod$delta
cv_DistArsenicMod <- cv.glm(wells, DistArsenicMod, K = 3)
cv_DistArsenicMod$delta
clear
setwd("~/Desktop/Biostats/FinalProject")
ls
getwd
getwd()
2+2
knitr::opts_chunk$set(echo = TRUE)
#plotting
library(ggplot2)
# data manipulation
library(tidyverse)
# making residual plots
library(ggResidpanel)
# estimating marginal means
library(emmeans)
# needed for creating proper ANOVA table
library(car)
#Anova stat package
library(rstatix)
library(ggpubr)
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=2) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
options(contrasts = c("contr.sum","contr.ply")) #options fo later post hoc comparison
model_1 <- lm(lc_doy ~ year * species,data=pheno_trimmed) #build linear model
summary(model_1) #view linear model
resid_panel(model_1,plot="all") #check on residuals
Anova(model_1, type = 3) #run an ANCOVA
pwc <- pheno_trimmed %>% tukey_hsd(lc_doy ~ species) #pair wise comparisons
pwc #look at the PWC of species
#pwc %>%
#ggplot(aes(x = species, y = lc_doy)) + #set year as x axis and julian day of change as the y
#geom_bar(aes(color=species, fill=species), size=2) +
#ggtitle("Leaf Color Change Date Over Time")+ #add title
#xlab("Species") + #label x axis
#ylab("Date 50% of Leaves Changed Color ") + #label y axis
#theme_classic() #changing background
View(pwc)
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=2) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
geom_smooth(method = "lm", formula = y ~ x, se = TRUE)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=2) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
geom_smooth(aes(group=Species), method = "lm", formula = y ~ x, se = TRUE)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=2) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
geom_smooth(aes(group=species), method = "lm", formula = y ~ x, se = TRUE)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=2) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
geom_smooth(aes(group=species,color=species), method = "lm", formula = y ~ x, se = F)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=1) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
#adding in trend lines by species
geom_smooth(aes(group=species,color=species), method = "lm", formula = y ~ x, se = F)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
View(pheno)
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
for(row in nrow(pheno_trimmed)){
row_species=pheno_trimmed[row,"species"]
if(rowspecies=="ACRU"|row_species=="ACSA"|row_species=="ACPE"|row_species=="AMSP"){
pheno_trimmed[row,"genus"]="Acer"
}
if(row_species=="BELE"|row_species=="BEPA"|row_species=="BEAL"){
pheno_trimmed[row,"genus"]="Betula"}
if(row_species=="FAGR"|row_species=="FRAM"){
pheno_trimmed[row,"genus"]="Fagus"}
if(row_species=="NYSY"){
pheno_trimmed[row,"genus"]="Nyssa"}
if(row_species=="PRSE"){
pheno_trimmed[row,"genus"]="Prunus"}
if(rows_species=="QURU"|row_species=="QUVE"|row_species=="QUVE"){
pheno_trimmed[row,"genus"]="Quercus"}
}
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
for(row in nrow(pheno_trimmed)){
row_species=pheno_trimmed[row,"species"]
if(row_species=="ACRU"|row_species=="ACSA"|row_species=="ACPE"|row_species=="AMSP"){
pheno_trimmed[row,"genus"]="Acer"}
if(row_species=="BELE"|row_species=="BEPA"|row_species=="BEAL"){
pheno_trimmed[row,"genus"]="Betula"}
if(row_species=="FAGR"|row_species=="FRAM"){
pheno_trimmed[row,"genus"]="Fagus"}
if(row_species=="NYSY"){
pheno_trimmed[row,"genus"]="Nyssa"}
if(row_species=="PRSE"){
pheno_trimmed[row,"genus"]="Prunus"}
if(rows_species=="QURU"|row_species=="QUVE"|row_species=="QUVE"){
pheno_trimmed[row,"genus"]="Quercus"}
}
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
for(row in nrow(pheno_trimmed)){
row_species=pheno_trimmed[row,"species"]
if(row_species=="ACRU"|row_species=="ACSA"|row_species=="ACPE"|row_species=="AMSP"){
pheno_trimmed[row,"genus"]="Acer"}
if(row_species=="BELE"|row_species=="BEPA"|row_species=="BEAL"){
pheno_trimmed[row,"genus"]="Betula"}
if(row_species=="FAGR"|row_species=="FRAM"){
pheno_trimmed[row,"genus"]="Fagus"}
if(row_species=="NYSY"){
pheno_trimmed[row,"genus"]="Nyssa"}
if(row_species=="PRSE"){
pheno_trimmed[row,"genus"]="Prunus"}
if(row_species=="QURU"|row_species=="QUVE"|row_species=="QUVE"){
pheno_trimmed[row,"genus"]="Quercus"}
}
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=1) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
#adding in trend lines by species
geom_smooth(aes(group=species,color=species), method = "lm", formula = y ~ x, se = F)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
View(pheno_trimmed)
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
for(row in 1:nrow(pheno_trimmed)){
row_species=pheno_trimmed[row,"species"]
if(row_species=="ACRU"|row_species=="ACSA"|row_species=="ACPE"|row_species=="AMSP"){
pheno_trimmed[row,"genus"]="Acer"}
if(row_species=="BELE"|row_species=="BEPA"|row_species=="BEAL"){
pheno_trimmed[row,"genus"]="Betula"}
if(row_species=="FAGR"|row_species=="FRAM"){
pheno_trimmed[row,"genus"]="Fagus"}
if(row_species=="NYSY"){
pheno_trimmed[row,"genus"]="Nyssa"}
if(row_species=="PRSE"){
pheno_trimmed[row,"genus"]="Prunus"}
if(row_species=="QURU"|row_species=="QUVE"|row_species=="QUVE"){
pheno_trimmed[row,"genus"]="Quercus"}
}
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=1) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
#adding in trend lines by species
geom_smooth(aes(group=species,color=species), method = "lm", formula = y ~ x, se = F)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
View(pheno_trimmed)
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
for(row in 1:nrow(pheno_trimmed)){
row_species=pheno_trimmed[row,"species"]
if(row_species=="ACRU"|row_species=="ACSA"|row_species=="ACPE"|row_species=="AMSP"){
pheno_trimmed[row,"genus"]="Acer"}
if(row_species=="BELE"|row_species=="BEPA"|row_species=="BEAL"){
pheno_trimmed[row,"genus"]="Betula"}
if(row_species=="FAGR"|row_species=="FRAM"){
pheno_trimmed[row,"genus"]="Fagus"}
if(row_species=="NYSY"){
pheno_trimmed[row,"genus"]="Nyssa"}
if(row_species=="PRSE"){
pheno_trimmed[row,"genus"]="Prunus"}
if(row_species=="QURU"|row_species=="QUAL"|row_species=="QUVE"){
pheno_trimmed[row,"genus"]="Quercus"}
}
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=1) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
#adding in trend lines by species
geom_smooth(aes(group=species,color=species), method = "lm", formula = y ~ x, se = F)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
View(pheno_trimmed)
options(contrasts = c("contr.sum","contr.ply")) #options fo later post hoc comparison
model_1 <- lm(lc_doy ~ year * species,data=pheno_trimmed) #build linear model
resid_panel(model_1,plot="all") #check on residuals
Anova(model_1, type = 3) #run an ANCOVA
pwc <- pheno_trimmed %>% tukey_hsd(lc_doy ~ species) #pair wise comparisons
pwc #look at the PWC of species
genus_summary <- pheno_trimmed %>%
group_by(genus) %>%
summarise(mean_lc_date=mean(lc_doy))
#pwc %>%
#ggplot(aes(x = species, y = lc_doy)) + #set year as x axis and julian day of change as the y
#geom_bar(aes(color=species, fill=species), size=2) +
#ggtitle("Leaf Color Change Date Over Time")+ #add title
#xlab("Species") + #label x axis
#ylab("Date 50% of Leaves Changed Color ") + #label y axis
#theme_classic() #changing background
View(genus_summary)
knitr::opts_chunk$set(echo = TRUE)
#plotting
library(ggplot2)
# data manipulation
library(tidyverse)
# making residual plots
library(ggResidpanel)
# estimating marginal means
library(emmeans)
# needed for creating proper ANOVA table
library(car)
#Anova stat package
library(rstatix)
library(ggpubr)
pheno <- read.csv(file="hf003-08-fall-mean-spp.csv") #read in the data
pheno_trimmed <- pheno %>% #pipe in data
#filter in species present for the whole dataset
filter(species=="ACRU"|species=="ACSA"|species=="ACPE"|species=="AMSP"|
species=="BEAL"|species=="BELE"|species=="BEPA"|species=="FAGR"|
species=="FRAM"|species=="NYSY"|species=="PRSE"|species=="QUAL"|
species=="QURU"|species=="QUVE")
pheno_trimmed %>%
ggplot(aes(x = year, y = lc_doy)) + #set year as x axis and julian day of change as the y
geom_point(aes(color=species, fill=species), size=1) +
ggtitle("Leaf Color Change Date Over Time")+ #add title
#adding in trend lines by species
geom_smooth(aes(group=species,color=species), method = "lm", formula = y ~ x, se = F)+
xlab("Year") + #label x axis
ylab("Date 50% of Leaves Changed Color ") + #label y axis
theme_classic() #changing background
options(contrasts = c("contr.sum","contr.ply")) #options fo later post hoc comparison
model_1 <- lm(lc_doy ~ year * species,data=pheno_trimmed) #build linear model
summary(model_1) #view linear model
resid_panel(model_1,plot="all") #check on residuals
Anova(model_1, type = 3) #run an ANCOVA
pwc <- pheno_trimmed %>% tukey_hsd(lc_doy ~ species) #pair wise comparisons
pwc #look at the PWC of species
#pwc %>%
#ggplot(aes(x = species, y = lc_doy)) + #set year as x axis and julian day of change as the y
#geom_bar(aes(color=species, fill=species), size=2) +
#ggtitle("Leaf Color Change Date Over Time")+ #add title
#xlab("Species") + #label x axis
#ylab("Date 50% of Leaves Changed Color ") + #label y axis
#theme_classic() #changing background
options(contrasts = c("contr.sum","contr.ply")) #options fo later post hoc comparison
model_1 <- lm(lc_doy ~ year * species,data=pheno_trimmed) #build linear model
summary(model_1) #view linear model
resid_panel(model_1,plot="all") #check on residuals
Anova(model_1, type = 3) #run an ANCOVA
pwc <- pheno_trimmed %>% tukey_hsd(lc_doy ~ species) #pair wise comparisons
pwc #look at the PWC of species
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)#plotting
library(tidyverse)# data manipulation
library(ggResidpanel)# making residual plots
library(emmeans)# estimating marginal means
library(car)# needed for creating proper ANOVA table
library(rstatix)#Anova stat package
library(ggpubr)#Anova stat package
